name: Publish new package into test pypi

on: [push, pull_request]

jobs:
  build_archs:
    name: Build wheels manylinux_aarch64
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.1.1
        env:
          CIBW_ARCHS_LINUX: aarch64
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_24
          CC=gcc-9
#          CIBW_BEFORE_ALL_LINUX: apt update; apt install g++-aarch64-linux-gnu

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
#
#jobs:
#  build_manylinux:
#    name: Build for manylinux
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        cibw_archs: ["auto"]
#        include:
#          - cibw_archs: "aarch64"
#
#    steps:
#    - name: Set up QEMU
#      if: matrix.cibw_archs == 'aarch64'
#      uses: docker/setup-qemu-action@v1
#      with:
#        platforms: arm64
#
#    - uses: actions/checkout@v2
#      with:
#        submodules: recursive
#
#    - uses: actions/setup-python@v2
#      name: Install Python
#      with:
#        python-version: '3.8'
#
#    - name: Install cibuildwheel
#      run: |
#        python -m pip install cibuildwheel==2.1.1 twine
#
#    - name: Build wheels for CPython and PyPy, and Deploy
#      env:
#        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
#        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
#        CIBW_BUILD: "cp36-* cp37-* cp38-* cp39-* pp36-* pp37-*"
#        MPL_DISABLE_FH4: "yes"
#        CIBW_ARCHS: ${{ matrix.cibw_archs }}
#      run: |
#        USE_MIMALLOC=1 python -m cibuildwheel --output-dir dist
#        # python -m twine upload --repository testpypi wheelhouse/*.whl
#
#        python setup.py sdist
#        # python -m twine upload --repository testpypi dist/*.tar.gz
#
#        mv Kiwi/ModelGenerator/sj.* model/kiwipiepy_model/
#        mv Kiwi/ModelGenerator/extract.mdl model/kiwipiepy_model/
#        mv Kiwi/ModelGenerator/default.dict model/kiwipiepy_model/
#
#        cd model
#        python setup.py sdist
#        # python -m twine upload --repository testpypi dist/*.tar.gz
#    - uses: actions/upload-artifact@v2
#      with:
#        path: ./wheelhouse/*.whl
#
#
#  build_macos:
#    name: Build for macOS
#    runs-on: macOS-latest
#    strategy:
#      max-parallel: 4
#      matrix:
#        python-version: [3.6, 3.7, 3.8, 3.9]
#
#    steps:
#    - uses: actions/checkout@v1
#      with:
#        submodules: recursive
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v1
#      with:
#        python-version: ${{ matrix.python-version }}
#    - name: Deploy
#      continue-on-error: True
#      env:
#        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
#        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
#      run: |
#        python -m pip install twine wheel
#        MACOSX_DEPLOYMENT_TARGET=10.14 USE_MIMALLOC=1 python setup.py bdist_wheel
#        twine upload --repository testpypi dist/*
#
#  build_windows:
#    name: Build for Windows
#    runs-on: windows-latest
#    strategy:
#      max-parallel: 4
#      matrix:
#        python-version: [3.6, 3.7, 3.8, 3.9]
#        architecture: [x86, x64]
#
#    steps:
#    - uses: actions/checkout@v1
#      with:
#        submodules: recursive
#    - name: Set up Python ${{ matrix.python-version }} ${{ matrix.architecture }}
#      uses: actions/setup-python@v1
#      with:
#        python-version: ${{ matrix.python-version }}
#        architecture: ${{ matrix.architecture }}
#    - name: Deploy
#      continue-on-error: True
#      env:
#        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
#        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
#      run: |
#        python -m pip install --upgrade pip setuptools
#        python -m pip install twine wheel
#        $env:USE_MIMALLOC = 1; python setup.py bdist_wheel
#        twine upload --repository testpypi dist/*
